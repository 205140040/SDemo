<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	
	xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    
    xmlns:flow="http://www.springframework.org/schema/webflow-config" 
    xmlns:security="http://www.springframework.org/schema/security"
    
     xmlns:jms="http://www.springframework.org/schema/jms"
      xmlns:amq="http://activemq.apache.org/schema/core"
      
      xmlns:task="http://www.springframework.org/schema/task"  
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
	
	
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd  
   
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    
    http://www.springframework.org/schema/webflow-config 
    http://www.springframework.org/schema/webflow-config/webflow-config-2.0.xsd
    
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.0.xsd
    
     http://www.springframework.org/schema/jms
    http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
    
    http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd  
    
    http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-3.0.xsd 
	">

<!-- 处理静态资源请求 

<mvc:resources mapping="/resources/**" location="/resources/*" />
-->

<!-- 占位符读取属性文件
如果未找到属性文件，则忽略错误，使用系统默认配置
 -->
<!-- 获取properties数据源文件 方式一 -->  
<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
       <property name="locations">    
           <list>  
           		<!-- 如果有多个，可以在下面列出来 -->  
               <value>classpath:/db.properties</value>  
               <value>classpath:/mailserver.properties</value>     
           </list>    
       </property>    
   </bean>   

<!-- 配置数据源 -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">

<property name="driverClassName" value="${jdbc.driverClassName}" />
<property name="url" value="${jdbc.url}" />
<property name="username" value="${jdbc.username}" />
<property name="password" value="${jdbc.password}" />

</bean>


<!-- 启用mvc注解 -->
<mvc:annotation-driven />

<!-- 扫描component，controller，repository,service -->
<context:component-scan base-package="com.demo.*">
</context:component-scan>

<!-- 配置邮件服务 -->
<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"
p:host="${mailserver.host}"
p:port="${mailserver.port}"
p:username="${mailserver.username}"
p:password="${mailserver.password}"
>

</bean>
<!-- 使spring支持调度和异步方法 -->
<task:annotation-driven /> 



<bean id="springRmiService" class="com.demo.service.impl.SpringRmiServiceImpl"></bean>

<!-- 使用spring RMIServiceExporter发布RMI服务 
<bean class="org.springframework.remoting.rmi.RmiServiceExporter" p:service-ref="springRmiService">

<property name="serviceName" value="SpringRmiService"></property>
<property name="serviceInterface"  value="com.demo.service.ISpringRmiService"></property>
</bean>
-->

<!-- 使用Hessian服务 
<bean id="hessianService" class="org.springframework.remoting.caucho.HessianServiceExporter"
p:service-ref="springRmiService"
p:serviceInterface="com.demo.service.ISpringRmiService"
></bean>
-->

<!-- 配置hessian URLmapping 
<bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
<property name="mappings">
<value>/demo.service=hessianService</value>
</property>
</bean>
-->

<!-- 配置httpInvoker-->
<bean id="httpInvokerService" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter"
p:service-ref="springRmiService"
p:serviceInterface="com.demo.service.ISpringRmiService"
></bean> 

<!-- 配置httpInvoker 代理工厂 
<bean id="hessianService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean"
p:serviceUrl="http://localhost:8080/SpringLearnDemo/remoting/HelloService"
p:serviceInterface="com.demo.test.ISpringRmiService"
></bean>
-->


<!-- 配置spring jax-ws 
<bean class="org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter"

></bean>-->


<!-- 配置activemq代理 
<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
<property name="brokerURL" value="tcp://localhost:61616"></property>

</bean>
-->

<!-- 配置队列 
<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
<constructor-arg value="SpringLeranDemo.queue"></constructor-arg>
</bean>
-->

<!-- 配置主题 
<bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
<constructor-arg value="SpringLeranDemo.topic"></constructor-arg>
</bean>
-->

<!-- 装配jms 模板 
<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
<property name="connectionFactory" ref="connectionFactory"></property>
</bean>
-->


<!-- 配置消息驱动bean 
<bean id="alertHandlerImpl" class="com.demo.service.impl.AlertHandlerImpl"></bean>
-->

<!-- 配置jmsExporter 
<bean id="jmsExporter" class="org.springframework.jms.remoting.JmsInvokerServiceExporter"
p:service-ref="alertService"
p:serviceInterface="com.demo.service.AlertService"
></bean>
-->

<!-- 配置消息监听器 
<jms:listener-container connection-factory="connectionFactory">
<jms:listener destination="SpringLeranDemo.alert.queue" 
ref="jmsExporter" />

</jms:listener-container>
-->

<!-- 配置lingo 
<bean id="lingoExporter" class="org.logicblaze.lingo.jms.JmsServiceExporter"
p:connectionFactory-ref="connectionFactory"
p:destination-ref="alertServiceQueue"
p:service-ref="alertService"
p:serviceInterface="com.demo.service.AlertService"

>
</bean>
-->
<!-- <amq:queue id="alertServiceQueue"  physicalName="SpringLeranDemo.alert.queue"></amq:queue> -->


<import resource="spring-security.xml"/>


</beans>